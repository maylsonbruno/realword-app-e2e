{"version":3,"file":"C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/auth.ts","sources":["C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import bcrypt from \"bcryptjs\";\r\nimport passport from \"passport\";\r\nimport express, { Request, Response } from \"express\";\r\nimport { User } from \"../src/models/user\";\r\nimport { getUserBy, getUserById } from \"./database\";\r\n\r\nconst LocalStrategy = require(\"passport-local\").Strategy;\r\nconst router = express.Router();\r\n\r\n// configure passport for local strategy\r\npassport.use(\r\n  new LocalStrategy(function (username: string, password: string, done: Function) {\r\n    const user = getUserBy(\"username\", username);\r\n\r\n    const failureMessage = \"Incorrect username or password.\";\r\n    if (!user) {\r\n      return done(null, false, { message: failureMessage });\r\n    }\r\n\r\n    // validate password\r\n    if (!bcrypt.compareSync(password, user.password)) {\r\n      return done(null, false, { message: failureMessage });\r\n    }\r\n\r\n    return done(null, user);\r\n  })\r\n);\r\n\r\npassport.serializeUser(function (user: User, done) {\r\n  done(null, user.id);\r\n});\r\n\r\npassport.deserializeUser(function (id: string, done) {\r\n  const user = getUserById(id);\r\n  done(null, user);\r\n});\r\n\r\n// authentication routes\r\nrouter.post(\"/login\", passport.authenticate(\"local\"), (req: Request, res: Response): void => {\r\n  if (req.body.remember) {\r\n    req.session!.cookie.maxAge = 24 * 60 * 60 * 1000 * 30; // Expire in 30 days\r\n  } else {\r\n    req.session!.cookie.expires = undefined;\r\n  }\r\n\r\n  res.send({ user: req.user });\r\n});\r\n\r\nrouter.post(\"/logout\", (req: Request, res: Response): void => {\r\n  res.clearCookie(\"connect.sid\");\r\n  req.logout(() => res.redirect(\"/\"));\r\n  req.session!.destroy(function (err) {\r\n    res.redirect(\"/\");\r\n  });\r\n});\r\n\r\nrouter.get(\"/checkAuth\", (req, res) => {\r\n  /* istanbul ignore next */\r\n  if (!req.user) {\r\n    res.status(401).json({ error: \"User is unauthorized\" });\r\n  } else {\r\n    res.status(200).json({ user: req.user });\r\n  }\r\n});\r\n\r\nexport default router;\r\n"]}