{"version":3,"file":"C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/bankaccount-routes.ts","sources":["C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/bankaccount-routes.ts"],"names":[],"mappings":";AAAA,gCAAgC;;;;;AAEhC,oDAA8B;AAE9B,uCAKoB;AACpB,qCAAoE;AACpE,2CAAyE;AACzE,IAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,SAAS;AAET,iCAAiC;AACjC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,6BAAmB,EAAE,UAAC,GAAG,EAAE,GAAG;;IAC5C,0BAA0B;IAC1B,IAAM,QAAQ,GAAG,IAAA,kCAAuB,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,EAAG,CAAC,CAAC;IAExD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,gDAAgD;AAChD,MAAM,CAAC,GAAG,CACR,iBAAiB,EACjB,6BAAmB,EACnB,IAAA,4BAAkB,EAAC,CAAC,IAAA,8BAAiB,EAAC,eAAe,CAAC,CAAC,CAAC,EACxD,UAAC,GAAG,EAAE,GAAG;IACC,IAAA,aAAa,GAAK,GAAG,CAAC,MAAM,cAAf,CAAgB;IAErC,IAAM,OAAO,GAAG,IAAA,6BAAkB,EAAC,aAAa,CAAC,CAAC;IAElD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACxB,CAAC,CACF,CAAC;AAEF,kCAAkC;AAClC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,6BAAmB,EAAE,IAAA,4BAAkB,EAAC,mCAAsB,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG;;IACzF,0BAA0B;IAC1B,IAAM,OAAO,GAAG,IAAA,mCAAwB,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,EAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAElE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC;AAEH,2CAA2C;AAC3C,MAAM,CAAC,MAAM,CACX,iBAAiB,EACjB,6BAAmB,EACnB,IAAA,4BAAkB,EAAC,CAAC,IAAA,8BAAiB,EAAC,eAAe,CAAC,CAAC,CAAC,EACxD,UAAC,GAAG,EAAE,GAAG;IACC,IAAA,aAAa,GAAK,GAAG,CAAC,MAAM,cAAf,CAAgB;IAErC,IAAM,OAAO,GAAG,IAAA,gCAAqB,EAAC,aAAa,CAAC,CAAC;IAErD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;AACxB,CAAC,CACF,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["///<reference path=\"types.ts\" />\r\n\r\nimport express from \"express\";\r\n\r\nimport {\r\n  getBankAccountsByUserId,\r\n  getBankAccountById,\r\n  createBankAccountForUser,\r\n  removeBankAccountById,\r\n} from \"./database\";\r\nimport { ensureAuthenticated, validateMiddleware } from \"./helpers\";\r\nimport { shortIdValidation, isBankAccountValidator } from \"./validators\";\r\nconst router = express.Router();\r\n\r\n// Routes\r\n\r\n//GET /bankAccounts (scoped-user)\r\nrouter.get(\"/\", ensureAuthenticated, (req, res) => {\r\n  /* istanbul ignore next */\r\n  const accounts = getBankAccountsByUserId(req.user?.id!);\r\n\r\n  res.status(200);\r\n  res.json({ results: accounts });\r\n});\r\n\r\n//GET /bankAccounts/:bankAccountId (scoped-user)\r\nrouter.get(\r\n  \"/:bankAccountId\",\r\n  ensureAuthenticated,\r\n  validateMiddleware([shortIdValidation(\"bankAccountId\")]),\r\n  (req, res) => {\r\n    const { bankAccountId } = req.params;\r\n\r\n    const account = getBankAccountById(bankAccountId);\r\n\r\n    res.status(200);\r\n    res.json({ account });\r\n  }\r\n);\r\n\r\n//POST /bankAccounts (scoped-user)\r\nrouter.post(\"/\", ensureAuthenticated, validateMiddleware(isBankAccountValidator), (req, res) => {\r\n  /* istanbul ignore next */\r\n  const account = createBankAccountForUser(req.user?.id!, req.body);\r\n\r\n  res.status(200);\r\n  res.json({ account });\r\n});\r\n\r\n//DELETE (soft) /bankAccounts (scoped-user)\r\nrouter.delete(\r\n  \"/:bankAccountId\",\r\n  ensureAuthenticated,\r\n  validateMiddleware([shortIdValidation(\"bankAccountId\")]),\r\n  (req, res) => {\r\n    const { bankAccountId } = req.params;\r\n\r\n    const account = removeBankAccountById(bankAccountId);\r\n\r\n    res.status(200);\r\n    res.json({ account });\r\n  }\r\n);\r\n\r\nexport default router;\r\n"]}