{"version":3,"file":"C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/validators.ts","sources":["C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/validators.ts"],"names":[],"mappings":"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","sourcesContent":["import { body, check, oneOf, query, sanitizeQuery } from \"express-validator\";\r\nimport { isValid } from \"shortid\";\r\nimport {\r\n  TransactionStatus,\r\n  TransactionRequestStatus,\r\n  DefaultPrivacyLevel,\r\n  NotificationsType,\r\n} from \"../src/models\";\r\nimport { includes } from \"lodash/fp\";\r\n\r\nconst TransactionStatusValues = Object.values(TransactionStatus);\r\nconst RequestStatusValues = Object.values(TransactionRequestStatus);\r\nconst DefaultPrivacyLevelValues = Object.values(DefaultPrivacyLevel);\r\nconst NotificationsTypeValues = Object.values(NotificationsType);\r\n\r\n// Validators\r\n\r\nconst isShortId = (value: string) => isValid(value);\r\n\r\nexport const shortIdValidation = (key: string) => check(key).custom(isShortId);\r\n\r\nexport const searchValidation = query(\"q\").exists();\r\n\r\nexport const userFieldsValidator = oneOf([\r\n  check(\"firstName\").exists(),\r\n  check(\"lastName\").exists(),\r\n  check(\"password\").exists(),\r\n  check(\"balance\").exists(),\r\n  check(\"avatar\").exists(),\r\n  check(\"defaultPrivacyLevel\").exists(),\r\n]);\r\n\r\nexport const isBankAccountValidator = [\r\n  body(\"bankName\").isString().trim(),\r\n  body(\"accountNumber\").isString().trim(),\r\n  body(\"routingNumber\").isString().trim(),\r\n];\r\n\r\nexport const isUserValidator = [\r\n  check(\"firstName\").optional({ checkFalsy: true }).isString().trim(),\r\n  check(\"lastName\").optional({ checkFalsy: true }).isString().trim(),\r\n  check(\"username\").optional({ checkFalsy: true }).isString().trim(),\r\n  check(\"password\").optional({ checkFalsy: true }).isString().trim(),\r\n  check(\"email\").optional({ checkFalsy: true }).isString().trim(),\r\n  check(\"phoneNumber\").optional({ checkFalsy: true }).isString().trim(),\r\n  check(\"balance\").optional({ checkFalsy: true }).isNumeric().trim(),\r\n  check(\"avatar\").optional({ checkFalsy: true }).isURL().trim(),\r\n  check(\"defaultPrivacyLevel\")\r\n    .optional({ checkFalsy: true })\r\n    .isIn([\"public\", \"private\", \"contacts\"]),\r\n];\r\n\r\nexport const sanitizeTransactionStatus = sanitizeQuery(\"status\").customSanitizer((value) => {\r\n  /* istanbul ignore if*/\r\n  if (includes(value, TransactionStatusValues)) {\r\n    return value;\r\n  }\r\n  return;\r\n});\r\n\r\n// default request status to undefined if not provided\r\nexport const sanitizeRequestStatus = sanitizeQuery(\"requestStatus\").customSanitizer((value) => {\r\n  /* istanbul ignore if*/\r\n  if (includes(value, RequestStatusValues)) {\r\n    return value;\r\n  }\r\n  return;\r\n});\r\n\r\nexport const isTransactionQSValidator = [\r\n  query(\"status\").isIn(TransactionStatusValues).optional().trim(),\r\n  query(\"requestStatus\").optional({ checkFalsy: true }).isIn(RequestStatusValues).trim(),\r\n  query(\"receiverId\").optional({ checkFalsy: true }).isString().trim(),\r\n  query(\"senderId\").optional({ checkFalsy: true }).isString().trim(),\r\n  query(\"rangeStartTs\").optional({ checkFalsy: true }).isString().trim(),\r\n  query(\"rangeEndTs\").optional({ checkFalsy: true }).isString().trim(),\r\n  query(\"amountMax\").optional({ checkFalsy: true }).isNumeric().trim(),\r\n  query(\"amountMin\").optional({ checkFalsy: true }).isNumeric().trim(),\r\n];\r\n\r\nexport const isTransactionPayloadValidator = [\r\n  body(\"transactionType\").isIn([\"payment\", \"request\"]).trim(),\r\n  body(\"privacyLevel\").optional().isIn(DefaultPrivacyLevelValues).trim(),\r\n  body(\"source\").optional().isString().trim(),\r\n  body(\"receiverId\").isString().trim(),\r\n  body(\"description\").isString().trim(),\r\n  body(\"amount\").isNumeric().trim().toInt(),\r\n];\r\n\r\nexport const isTransactionPatchValidator = [body(\"requestStatus\").isIn(RequestStatusValues)];\r\n\r\nexport const isTransactionPublicQSValidator = [\r\n  query(\"order\").optional({ checkFalsy: true }).isIn([\"default\"]),\r\n];\r\n\r\nexport const isCommentValidator = body(\"content\").isString().trim();\r\n\r\nexport const isNotificationsBodyValidator = [\r\n  body(\"items.*.type\").isIn(NotificationsTypeValues).trim(),\r\n  body(\"items.*.transactionId\").custom(isShortId),\r\n];\r\n\r\nexport const isNotificationPatchValidator = [body(\"isRead\").isBoolean()];\r\n\r\nexport const isValidEntityValidator = [\r\n  check(\"entity\")\r\n    .isIn([\r\n      \"users\",\r\n      \"contacts\",\r\n      \"bankaccounts\",\r\n      \"notifications\",\r\n      \"transactions\",\r\n      \"likes\",\r\n      \"comments\",\r\n      \"banktransfers\",\r\n    ])\r\n    .trim(),\r\n];\r\n"]}