{"version":3,"file":"C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/app.ts","sources":["C:/Users/full/Desktop/RealWordApp/cypress-realworld-app/backend/app.ts"],"names":[],"mappings":"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","sourcesContent":["import express from \"express\";\r\nimport { join } from \"path\";\r\nimport logger from \"morgan\";\r\nimport passport from \"passport\";\r\nimport session from \"express-session\";\r\nimport bodyParser from \"body-parser\";\r\nimport cors from \"cors\";\r\nimport paginate from \"express-paginate\";\r\nimport { createHandler as graphqlHandler } from \"graphql-http/lib/use/express\";\r\nimport { loadSchemaSync } from \"@graphql-tools/load\";\r\nimport { GraphQLFileLoader } from \"@graphql-tools/graphql-file-loader\";\r\nimport { addResolversToSchema } from \"@graphql-tools/schema\";\r\n\r\nimport auth from \"./auth\";\r\nimport userRoutes from \"./user-routes\";\r\nimport contactRoutes from \"./contact-routes\";\r\nimport bankAccountRoutes from \"./bankaccount-routes\";\r\nimport gqlPlaygroundRoutes from \"./gql-playground-routes\";\r\nimport transactionRoutes from \"./transaction-routes\";\r\nimport likeRoutes from \"./like-routes\";\r\nimport commentRoutes from \"./comment-routes\";\r\nimport notificationRoutes from \"./notification-routes\";\r\nimport bankTransferRoutes from \"./banktransfer-routes\";\r\nimport testDataRoutes from \"./testdata-routes\";\r\nimport { checkAuth0Jwt, verifyOktaToken, checkCognitoJwt, checkGoogleJwt } from \"./helpers\";\r\nimport resolvers from \"./graphql/resolvers\";\r\nimport { frontendPort, getBackendPort } from \"../src/utils/portUtils\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst corsOption = {\r\n  origin: `http://localhost:${frontendPort}`,\r\n  credentials: true,\r\n};\r\n\r\nconst schema = loadSchemaSync(join(__dirname, \"./graphql/schema.graphql\"), {\r\n  loaders: [new GraphQLFileLoader()],\r\n});\r\n\r\nconst schemaWithResolvers = addResolversToSchema({\r\n  schema,\r\n  resolvers,\r\n});\r\n\r\nconst app = express();\r\n\r\n/* istanbul ignore next */\r\n// @ts-expect-error\r\nif (global.__coverage__) {\r\n  require(\"@cypress/code-coverage/middleware/express\")(app);\r\n}\r\n\r\napp.use(cors(corsOption));\r\napp.use(logger(\"dev\"));\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\napp.use(\r\n  session({\r\n    secret: \"session secret\",\r\n    resave: false,\r\n    saveUninitialized: false,\r\n    unset: \"destroy\",\r\n  })\r\n);\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\napp.use(paginate.middleware(+process.env.PAGINATION_PAGE_SIZE!));\r\n\r\n/* istanbul ignore next */\r\nif (process.env.NODE_ENV === \"test\" || process.env.NODE_ENV === \"development\") {\r\n  app.use(\"/testData\", testDataRoutes);\r\n}\r\n\r\napp.use(auth);\r\n\r\n/* istanbul ignore if */\r\nif (process.env.VITE_AUTH0) {\r\n  app.use(checkAuth0Jwt);\r\n}\r\n\r\n/* istanbul ignore if */\r\nif (process.env.VITE_OKTA) {\r\n  app.use(verifyOktaToken);\r\n}\r\n\r\n/* istanbul ignore if */\r\nif (process.env.VITE_AWS_COGNITO) {\r\n  app.use(checkCognitoJwt);\r\n}\r\n\r\n/* istanbul ignore if */\r\nif (process.env.VITE_GOOGLE) {\r\n  app.use(checkGoogleJwt);\r\n}\r\n\r\napp.use(\"/graphql\", gqlPlaygroundRoutes);\r\napp.use(\r\n  \"/graphql\",\r\n  graphqlHandler({\r\n    schema: schemaWithResolvers,\r\n    context: async (req, _args) => {\r\n      return { user: req.raw.user };\r\n    },\r\n  })\r\n);\r\napp.use(\"/users\", userRoutes);\r\napp.use(\"/contacts\", contactRoutes);\r\napp.use(\"/bankAccounts\", bankAccountRoutes);\r\napp.use(\"/transactions\", transactionRoutes);\r\napp.use(\"/likes\", likeRoutes);\r\napp.use(\"/comments\", commentRoutes);\r\napp.use(\"/notifications\", notificationRoutes);\r\napp.use(\"/bankTransfers\", bankTransferRoutes);\r\n\r\napp.use(express.static(join(__dirname, \"../public\")));\r\n\r\ngetBackendPort().then((port) => {\r\n  app.listen(port);\r\n});\r\n"]}